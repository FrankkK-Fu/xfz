function NewsCategory(){}NewsCategory.prototype.run=function(){var t=this;t.listenAddCategoryEvent(),t.listenEditCategoryEvent(),t.listenDeleteCategoryEvent()},NewsCategory.prototype.listenAddCategoryEvent=function(){$("#add-btn").click(function(){xfzalert.alertOneInput({title:"添加新闻分类",placeholder:"请输入新闻分类",confirmCallback:function(t){xfzajax.post({url:"/cms/add_news_category/",data:{name:t},success:function(t){200===t.code?(console.log(t),window.location.reload()):xfzalert.close()}})}})})},NewsCategory.prototype.listenEditCategoryEvent=function(){$(".edit-btn").click(function(){var t=$(this).parent().parent(),e=t.attr("data-pk"),n=t.attr("data-name");xfzalert.alertOneInput({title:"修改分类名称",placeholder:"请输入新的分类名称",value:n,confirmCallback:function(t){xfzajax.post({url:"/cms/edit_news_category/",data:{pk:e,name:t},success:function(t){200===t.code?window.location.reload():xfzalert.close()}})}})})},NewsCategory.prototype.listenDeleteCategoryEvent=function(){$(".delete-btn").click(function(){var t=$(this).parent().parent().attr("data-pk");xfzalert.alertConfirm({title:"您确定要删除这个分类吗！",confirmCallback:function(){xfzajax.post({url:"/cms/delete_news_category/",data:{pk:t},success:function(t){200===t.code?window.location.reload():xfzalert.close()}})}})})},$(function(){(new NewsCategory).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5ld3NfY2F0ZWdvcnkuanMiXSwibmFtZXMiOlsiTmV3c0NhdGVnb3J5IiwicHJvdG90eXBlIiwicnVuIiwic2VsZiIsInRoaXMiLCJsaXN0ZW5BZGRDYXRlZ29yeUV2ZW50IiwibGlzdGVuRWRpdENhdGVnb3J5RXZlbnQiLCJsaXN0ZW5EZWxldGVDYXRlZ29yeUV2ZW50IiwiJCIsImNsaWNrIiwieGZ6YWxlcnQiLCJhbGVydE9uZUlucHV0IiwidGl0bGUiLCJwbGFjZWhvbGRlciIsImNvbmZpcm1DYWxsYmFjayIsImlucHV0VmFsdWUiLCJ4ZnphamF4IiwicG9zdCIsInVybCIsImRhdGEiLCJuYW1lIiwic3VjY2VzcyIsInJlc3VsdCIsImNvbnNvbGUiLCJsb2ciLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInJlbG9hZCIsImNsb3NlIiwidHIiLCJwYXJlbnQiLCJwayIsImF0dHIiLCJ2YWx1ZSIsImFsZXJ0Q29uZmlybSJdLCJtYXBwaW5ncyI6IkFBQ0EsU0FBU0EsZ0JBS1RBLGFBQWFDLFVBQVVDLElBQU0sV0FDekIsSUFBSUMsRUFBT0MsS0FDWEQsRUFBS0UseUJBQ0xGLEVBQUtHLDBCQUNMSCxFQUFLSSw2QkFJVFAsYUFBYUMsVUFBVUksdUJBQXlCLFdBQy9CRyxFQUFFLFlBQ1JDLE1BQU0sV0FDVkMsU0FBU0MsY0FBYyxDQUNuQkMsTUFBUyxTQUNUQyxZQUFlLFVBQ2RDLGdCQUFtQixTQUFVQyxHQUN6QkMsUUFBUUMsS0FBSyxDQUNUQyxJQUFPLDBCQUNQQyxLQUFRLENBQ0pDLEtBQU9MLEdBRVhNLFFBQVcsU0FBVUMsR0FDSyxNQUFuQkEsRUFBYSxNQUNaQyxRQUFRQyxJQUFJRixHQUNaRyxPQUFPQyxTQUFTQyxVQUVoQmpCLFNBQVNrQixpQkFTckM1QixhQUFhQyxVQUFVSyx3QkFBMEIsV0FFL0JFLEVBQUUsYUFDUkMsTUFBTSxXQUNWLElBQ0lvQixFQURhckIsRUFBRUosTUFDQzBCLFNBQVNBLFNBQ3pCQyxFQUFLRixFQUFHRyxLQUFLLFdBQ2JaLEVBQU9TLEVBQUdHLEtBQUssYUFDbkJ0QixTQUFTQyxjQUFjLENBQ25CQyxNQUFTLFNBQ1RDLFlBQWUsWUFDZm9CLE1BQVNiLEVBQ1ROLGdCQUFtQixTQUFVQyxHQUN6QkMsUUFBUUMsS0FBSyxDQUNUQyxJQUFPLDJCQUNQQyxLQUFRLENBQ0pZLEdBQUtBLEVBQ0xYLEtBQU9MLEdBRVhNLFFBQVUsU0FBVUMsR0FDTSxNQUFuQkEsRUFBYSxLQUNaRyxPQUFPQyxTQUFTQyxTQUVoQmpCLFNBQVNrQixpQkFVckM1QixhQUFhQyxVQUFVTSwwQkFBNEIsV0FDL0JDLEVBQUUsZUFDUkMsTUFBTSxXQUNaLElBRUlzQixFQUZhdkIsRUFBRUosTUFDQzBCLFNBQVNBLFNBQ2pCRSxLQUFLLFdBQ2pCdEIsU0FBU3dCLGFBQWEsQ0FDbEJ0QixNQUFTLGVBQ1RFLGdCQUFtQixXQUNmRSxRQUFRQyxLQUFLLENBQ1RDLElBQU8sNkJBQ1BDLEtBQVEsQ0FDSlksR0FBTUEsR0FFVlYsUUFBVyxTQUFVQyxHQUNLLE1BQW5CQSxFQUFhLEtBQ1pHLE9BQU9DLFNBQVNDLFNBRWhCakIsU0FBU2tCLGlCQVNyQ3BCLEVBQUUsWUFDZ0IsSUFBSVIsY0FDVkUiLCJmaWxlIjoibmV3c19jYXRlZ29yeS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmZ1bmN0aW9uIE5ld3NDYXRlZ29yeSgpIHtcbiAgICBcbn07XG5cblxuTmV3c0NhdGVnb3J5LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYubGlzdGVuQWRkQ2F0ZWdvcnlFdmVudCgpO1xuICAgIHNlbGYubGlzdGVuRWRpdENhdGVnb3J5RXZlbnQoKTtcbiAgICBzZWxmLmxpc3RlbkRlbGV0ZUNhdGVnb3J5RXZlbnQoKTtcbn07XG5cblxuTmV3c0NhdGVnb3J5LnByb3RvdHlwZS5saXN0ZW5BZGRDYXRlZ29yeUV2ZW50ID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgYWRkYnRuID0gJCgnI2FkZC1idG4nKTtcbiAgICBhZGRidG4uY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgIHhmemFsZXJ0LmFsZXJ0T25lSW5wdXQoe1xuICAgICAgICAgICAndGl0bGUnOiAn5re75Yqg5paw6Ze75YiG57G7JyxcbiAgICAgICAgICAgJ3BsYWNlaG9sZGVyJzogJ+ivt+i+k+WFpeaWsOmXu+WIhuexuycsXG4gICAgICAgICAgICAnY29uZmlybUNhbGxiYWNrJzogZnVuY3Rpb24gKGlucHV0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICB4ZnphamF4LnBvc3Qoe1xuICAgICAgICAgICAgICAgICAgICAndXJsJzogJy9jbXMvYWRkX25ld3NfY2F0ZWdvcnkvJyxcbiAgICAgICAgICAgICAgICAgICAgJ2RhdGEnOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnbmFtZSc6aW5wdXRWYWx1ZVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddID09PSAyMDApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuTmV3c0NhdGVnb3J5LnByb3RvdHlwZS5saXN0ZW5FZGl0Q2F0ZWdvcnlFdmVudCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBlZGl0QnRuID0gJCgnLmVkaXQtYnRuJyk7XG4gICAgZWRpdEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjdXJyZW50QnRuID0gJCh0aGlzKTtcbiAgICAgICAgdmFyIHRyID0gY3VycmVudEJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcbiAgICAgICAgdmFyIHBrID0gdHIuYXR0cignZGF0YS1waycpO1xuICAgICAgICB2YXIgbmFtZSA9IHRyLmF0dHIoJ2RhdGEtbmFtZScpO1xuICAgICAgICB4ZnphbGVydC5hbGVydE9uZUlucHV0KHtcbiAgICAgICAgICAgICd0aXRsZSc6ICfkv67mlLnliIbnsbvlkI3np7AnLFxuICAgICAgICAgICAgJ3BsYWNlaG9sZGVyJzogJ+ivt+i+k+WFpeaWsOeahOWIhuexu+WQjeensCcsXG4gICAgICAgICAgICAndmFsdWUnOiBuYW1lLFxuICAgICAgICAgICAgJ2NvbmZpcm1DYWxsYmFjayc6IGZ1bmN0aW9uIChpbnB1dFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgeGZ6YWpheC5wb3N0KHtcbiAgICAgICAgICAgICAgICAgICAgJ3VybCc6ICcvY21zL2VkaXRfbmV3c19jYXRlZ29yeS8nLFxuICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdwayc6cGssXG4gICAgICAgICAgICAgICAgICAgICAgICAnbmFtZSc6aW5wdXRWYWx1ZSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgJ3N1Y2Nlc3MnOmZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmKHJlc3VsdFsnY29kZSddID09PSAyMDApe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB4ZnphbGVydC5jbG9zZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG59O1xuXG5OZXdzQ2F0ZWdvcnkucHJvdG90eXBlLmxpc3RlbkRlbGV0ZUNhdGVnb3J5RXZlbnQgPSBmdW5jdGlvbigpe1xuICAgIHZhciBkZWxldGVCdG4gPSAkKCcuZGVsZXRlLWJ0bicpO1xuICAgIGRlbGV0ZUJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBjdXJyZW50QnRuID0gJCh0aGlzKTtcbiAgICAgICAgdmFyIHRyID0gY3VycmVudEJ0bi5wYXJlbnQoKS5wYXJlbnQoKTtcbiAgICAgICAgdmFyIHBrID0gdHIuYXR0cignZGF0YS1waycpO1xuICAgICAgICB4ZnphbGVydC5hbGVydENvbmZpcm0oe1xuICAgICAgICAgICAgJ3RpdGxlJzogJ+aCqOehruWumuimgeWIoOmZpOi/meS4quWIhuexu+WQl++8gScsXG4gICAgICAgICAgICAnY29uZmlybUNhbGxiYWNrJzogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHhmemFqYXgucG9zdCh7XG4gICAgICAgICAgICAgICAgICAgICd1cmwnOiAnL2Ntcy9kZWxldGVfbmV3c19jYXRlZ29yeS8nLFxuICAgICAgICAgICAgICAgICAgICAnZGF0YSc6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICdwayc6IHBrXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0Wydjb2RlJ10gPT09IDIwMCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhmemFsZXJ0LmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuXG4kKGZ1bmN0aW9uICgpIHtcbiAgIHZhciBjYXRlZ29yeSA9IG5ldyBOZXdzQ2F0ZWdvcnkoKTtcbiAgIGNhdGVnb3J5LnJ1bigpO1xufSk7Il19
